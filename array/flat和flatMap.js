console.log([1, 2, [3, 4]].flat()); // [ 1, 2, 3, 4 ]

// flat()用于将嵌套的数组“拉平”，变成一维的数组。该方法返回一个新数组，对原数据没有影响

console.log([1, 2, [3, [4, 5]]].flat()); // [ 1, 2, 3, [ 4, 5 ] ]

// flat()默认只会"拉平"一层，如果想要"拉平" 可以将flat()方法的参数写成一个整数，表示想要拉平的层数，默认为1。
console.log([1, 2, [3, [4, 5]]].flat(2)); // [ 1, 2, 3, 4, 5 ]

console.log([1, 2, [3, [4, 5]]].flat(Infinity)); // [ 1, 2, 3, 4, 5 ]
// 不敢有多少层嵌套，都要转成一维数组，可以用Infinity关键字作为参数

console.log([1, 2, , 3, 4, 5].flat()); // [ 1, 2, 3, 4, 5 ]
// 如果原数组有空位，flat()方法会跳过空位。


let arr2 = [2, 3, 4].flatMap((x) => {
    return [x, x * 2]
});
console.log(arr2); // [ 2, 4, 3, 6, 4, 8 ];

// flatMap()方法对原数组的每个成员执行一个函数（相当于执行Array.prototype.map()），然后对返回值组成的数组执行flat()方法。该方法返回一个新数组，不改变原数组。

let arr3 = [2, 3, 4].flatMap((x) => {
    return [[x * 2]]
});
console.log(arr3); // [ [ 4 ], [ 6 ], [ 8 ] ];

// flatMap()只能展开一层数组。